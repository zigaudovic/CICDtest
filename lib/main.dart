import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:injectable/injectable.dart';
import 'package:riverpod_test/add_location.dart';
import 'package:riverpod_test/application/location_riverpod.dart';
import 'package:riverpod_test/core/injection_container.dart';
import 'package:riverpod_test/domain/location/location_repository.dart';
import 'package:riverpod_test/riverpod/locationRiver.dart';

void main() {
  WidgetsFlutterBinding.ensureInitialized();
  configureDependencies(Environment.dev);
  runApp(ProviderScope(child: const MyApp()));
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends ConsumerWidget {
  MyHomePage({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final state = ref.watch(locationNotifierProvider);

    //final stateAutoGenerated = ref.watch(locationNotiProvider);

    ref.listen(locationNotifierProvider, (previous, next) {
      next.maybeMap(
        orElse: () {
          Navigator.of(context).canPop() ? Navigator.of(context).pop() : null;
        },
        loaded: (_) => {},
      );
    });

    return Scaffold(
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Container(
            height: 300,
            child: state.when(
                initial: () => CircularProgressIndicator(),
                loading: () => CircularProgressIndicator(),
                loaded: (locations) {
                  return ListView.builder(
                    itemCount: locations.length,
                    itemBuilder: (context, index) {
                      return Card(child: Text(locations[index].name));
                    },
                  );
                },
                failed: (_) => Text("Some error")),
          ),
          FloatingActionButton(
              child: Text("Reset"),
              onPressed: () {
                ref.invalidate(locationNotifierProvider);
              }),
          ElevatedButton(
            child: const Text('Naprej na dodanje lokacije'),
            onPressed: () {
              Navigator.of(context).push(
                MaterialPageRoute(
                  builder: ((context) => const AddLocation()),
                ),
              );
            },
          ),
        ],
      ),
    );
  }
}
